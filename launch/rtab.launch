<launch>
  <arg name="ns" default="/kulbu" />
  <arg name="topic_odom" default="$(arg ns)/odometry/filtered" />
  <!--arg name="topic_odom" default="$(arg ns)/diff_drive_controller/odom" /-->
  <arg name="topic_scan" default="$(arg ns)/scan" />
  <arg name="topic_move" default="/move_base_simple/goal" />

  <!-- Choose visualization -->
  <arg name="rviz"       default="false" />
  <arg name="rtabmapviz" default="false" />

  <!-- Choose camera type -->
  <arg name="use_camera_stereo"  default="false" />
  <arg name="use_camera_depth"   default="true" />

  <!-- Generate fake laser from stereo disparity -->
  <arg name="use_fake_laser" default="false" />

  <!-- Use laser real or fake -->
  <arg name="use_laser_icp"  default="true" />

  <param name="use_sim_time" type="bool" value="true" />

  <!-- Just to uncompress images for stereo_image_rect -->
  <!--node name="republish_left" type="republish" pkg="image_transport" args="compressed in:=/camera_stereo/left/image_raw_throttle raw out:=/camera_stereo/left/image_raw_throttle_relay" />
  <node name="republish_right" type="republish" pkg="image_transport" args="compressed in:=/camera_stereo/right/image_raw_throttle raw out:=/camera_stereo/right/image_raw_throttle_relay" /-->

  <!-- Run the ROS package stereo_image_proc for image rectification -->
  <group if="$(arg use_camera_stereo)" ns="/camera_stereo" >
    <node pkg="nodelet" type="nodelet" name="stereo_nodelet"  args="manager" />

    <node pkg="nodelet" type="nodelet" name="stereo_throttle" args="load rtabmap_ros/stereo_throttle stereo_nodelet">
      <remap from="left/image"        to="left/image_raw" />
      <remap from="right/image"       to="right/image_raw" />
      <remap from="left/camera_info"  to="left/camera_info" />
      <remap from="right/camera_info" to="right/camera_info" />

      <param name="queue_size" type="int" value="10" />
      <param name="rate" type="double" value="20" />
    </node>

    <node pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc">
      <remap from="left/image_raw"    to="left/image_raw_throttle" />
      <remap from="left/camera_info"  to="left/camera_info_throttle" />
      <remap from="right/image_raw"   to="right/image_raw_throttle" />
      <remap from="right/camera_info" to="right/camera_info_throttle" />

      <!-- fairly course disparity image settings -->
      <!--
      <param name="disparity_range"          type="int"  value="128"/>
      <param name="prefilter_size"           type="int"  value="9"/>
      <param name="prefilter_cap"            type="int"  value="40"/>
      <param name="correlation_window_size"  type="int"  value="65"/>
      <param name="min_disparity"            type="int"  value="0"/>
      <param name="disparity_range"          type="int"  value="64"/>
      <param name="uniqueness_ratio"         type="int"  value="15"/>
      <param name="texture_threshold"        type="int"  value="10"/>
      <param name="speckle_size"             type="int"  value="320"/>
      <param name="speckle_range"            type="int"  value="10"/>
      -->
      <param name="approximate_sync"         type="bool" value="true" />
      <param name="queue_size"               type="int"  value="5" />
    </node>

    <!-- Create point cloud for the planner -->
    <node pkg="nodelet" type="nodelet" name="disparity2cloud" args="load rtabmap_ros/point_cloud_xyz stereo_nodelet">
      <remap from="disparity/image"       to="disparity" />
      <remap from="disparity/camera_info" to="right/camera_info_throttle" />
      <remap from="cloud"                 to="cloudXYZ" />

      <param name="voxel_size"  type="double" value="0.05" />
      <param name="decimation"  type="int"    value="4" />
      <param name="max_depth"   type="double" value="4" />
    </node>

    <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection stereo_nodelet">
      <param name="frame_id"              type="string" value="camera_stereo_link" />
      <param name="map_frame_id"          type="string" value="map" />

      <remap from="cloud"     to="cloudXYZ" />
      <remap from="obstacles" to="/planner_cloud" />

      <param name="wait_for_transform"    type="bool"   value="true" />
      <param name="min_cluster_size"      type="int"    value="20" />
      <!--param name="max_obstacles_height"  type="double" value="0.0"/-->
    </node>

    <!-- Disparity to depth
    <node pkg="nodelet" type="nodelet" name="disparity2depth" args="standalone rtabmap_ros/disparity_to_depth"/>
    -->
  </group>

  <!-- fake laser
  <node pkg="nodelet" type="nodelet" name="pointcloud_to_laserscan" args="load pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet stereo_nodelet" output="screen">
    <param name="output_frame_id" value="base_link"/>

    <remap from="cloud" to="/camera_stereo/points2"/>
    <remap from="scan"  to="/scan/fake"/>
  </node>
  -->
  <!--
  scan_height 1
  scan_time 0.033
  -->

  <!-- Fake laser
  <node if="$(arg use_fake_laser)" pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
    <remap from="image"       to="/camera_stereo/depth"/>
    <remap from="camera_info" to="/camera_stereo/depth/camera_info"/>
    <remap from="scan"        to="/scan/fake"/>

    <param name="range_min"       type="double" value="0.45"/>
    <param name="range_max"       type="double" value="10"/>
    <param name="output_frame_id" type="string" value="camera_stereo_optical_frame"/>
  </node>
  -->

  <!-- fake laser -->
  <!-- FIXME: frame wrong? points are very sparce, enable debug didn't show anything.
  <node if="$(arg use_fake_laser)" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <remap from="cloud_in" to="/camera_stereo/points2"/>
    <remap from="scan" to="/scan/fake"/>
    <rosparam>
    #target_frame: camera_link
    transform_tolerance: 0.01
    min_height: 0.0
    max_height: 1.0

    #angle_min: -1.5708 # -M_PI/2
    #angle_max: 1.5708 # M_PI/2
    angle_min: -3.14 # -M_PI/2
    angle_max: 3.14 # M_PI/2
    angle_increment: 0.087 # M_PI/360.0
    scan_time: 0.3333
    range_min: 0.45
    range_max: 4.0
    use_inf: true

    # Concurrency level, affects number of pointclouds queued for processing and number of threads used
    # 0 : Detect number of cores
    # 1 : Single threaded
    # 2->inf : Parallelism level
    concurrency_level: 0
    </rosparam>
  </node>
  -->

  <!-- Laser Odometry -->
  <!--node if="$(arg use_laser_odom)" pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher">
    <- TODO: imu/data ->
    <param name="base_frame" type="string" value="base_link"/>

    <remap from="scan"  to="/scan/fake"/>
    <remap from="odom"  to="/odometry/wheel_odometer"/>
  </node-->

  <!-- Stereo Odometry -->
  <!--node if="$(arg use_stereo_odom)" pkg="rtabmap_ros" type="stereo_odometry" name="stereo_odometry" output="screen">
    <param name="frame_id"      type="string" value="base_link"/><- FIXME: camera_link? Failed, no TF ->
    <param name="odom_frame_id" type="string" value="odom"/>

    <remap from="left/image_rect"       to="/camera_stereo/left/image_rect"/>
    <remap from="right/image_rect"      to="/camera_stereo/right/image_rect"/>
    <remap from="left/camera_info"      to="/camera_stereo/left/camera_info"/>
    <remap from="right/camera_info"     to="/camera_stereo/right/camera_info"/>
    <remap from="odom"                  to="/odometry/stereo_odometer"/>

    <param name="publish_tf"          type="bool"   value="true"/>
    <param name="queue_size"          type="int"    value="10"/>
    <param name="approx_sync"         type="bool"   value="false"/>

    <param name="Odom/InlierDistance" type="string" value="0.1"/>
    <param name="Odom/MinInliers"     type="string" value="10"/>
    <param name="Odom/RoiRatios"      type="string" value="0.03 0.03 0.04 0.04"/>
    <param name="Odom/MaxDepth"       type="string" value="10"/>
    <param name="OdomBow/NNDR"        type="string" value="0.8"/>
    <param name="GFTT/MaxCorners"     type="string" value="500"/>
    <param name="GFTT/MinDistance"    type="string" value="5"/>
    <param name="Odom/FillInfoData"   type="string" value="$(arg rtabmapviz)"/>
  </node-->

  <!--node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
    <remap from="rgb/image"       to="/camera/rgb/image_raw"/>
    <remap from="depth/image"     to="/camera/depth_registered/image_raw"/>
    <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>

    <param name="frame_id" type="string" value="base_link"/>
  </node-->

  <group ns="/rtabmap">

    <!-- Visual SLAM: args: "delete_db_on_start" and "udebug" -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
      <param name="frame_id" type="string" value="base_link" />

      <param name="subscribe_stereo"    type="bool"   value="$(arg use_camera_stereo)" />
      <param name="subscribe_depth"     type="bool"   value="$(arg use_camera_depth)" />
      <param name="subscribe_laserScan" type="bool"   value="$(arg use_laser_icp)" />

      <remap from="scan" to="$(arg topic_scan)" if="$(arg use_laser_icp)" />
      <remap from="odom" to="$(arg topic_odom)" />

      <!-- Connect `move_base` to RTABMap -->
      <remap from="goal_out" to="$(arg topic_move)" />
<!--
/rtabmap/assembled_clouds
/rtabmap/assembled_scans
/rtabmap/cloud_map
/rtabmap/global_path
/rtabmap/goal
/rtabmap/goal_global
/rtabmap/goal_reached
/rtabmap/graph
/rtabmap/grid_map
/rtabmap/info
/rtabmap/labels
/rtabmap/local_path
/rtabmap/mapData
/rtabmap/mapData_optimized
/rtabmap/move_base/cancel
/rtabmap/move_base/feedback
/rtabmap/move_base/goal
/rtabmap/move_base/result
/rtabmap/move_base/status
/rtabmap/proj_map
-->
      <!-- Stereo camera -->
      <remap from="left/image_rect"   to="/camera_stereo/left/image_rect_color"  if="$(arg use_camera_stereo)" />
      <remap from="right/image_rect"  to="/camera_stereo/right/image_rect_color" if="$(arg use_camera_stereo)" />
      <remap from="left/camera_info"  to="/camera_stereo/left/camera_info"       if="$(arg use_camera_stereo)" />
      <remap from="right/camera_info" to="/camera_stereo/right/camera_info"      if="$(arg use_camera_stereo)" />

      <!-- Depth camera -->
      <remap from="depth/image"     to="/camera_depth/depth_registered/image_raw" if="$(arg use_camera_depth)" />
      <remap from="rgb/image"       to="/camera_depth/rgb/image_raw"   if="$(arg use_camera_depth)" />
      <remap from="rgb/camera_info" to="/camera_depth/rgb/camera_info" if="$(arg use_camera_depth)" />

      <param name="queue_size" type="int" value="50"/>

      <!-- RTAB-Map's parameters -->
      <rosparam file="$(find kulbu_slam)/config/rtabmap.yaml" command="load" />

      <!-- Enable Laser ICP -->
      <param if="$(arg use_laser_icp)" name="LccIcp/Type" type="string" value="2" />

      <!-- Disable graph optimization because we use `map_optimizer` node below -->
      <param name="RGBD/ToroIterations" type="string" value="0" />
    </node>

    <!-- Attach wheel to odom when using wheel_odometer -->
    <!-- FIXME: stereo odom requires broadcastTf to be turned off in `kulbu.gazebo` or wheel odom overrides. -->
    <!--node if="$(arg use_stereo_odom)" pkg="tf" type="static_transform_publisher" name="odom_base_tf" args="0.000 0.000 0.000 0.000 0.000 0.000 odom /odometry/stereo_odometer 100"/-->
    <!--node if="$(arg use_wheel_odom)"  pkg="tf" type="static_transform_publisher" name="odom_base_tf" args="0.000 0.000 0.000 0.000 0.000 0.000 odom /odometry/wheel_odometer 100"/-->
    <!--node if="$(arg use_laser_odom)"  pkg="tf" type="static_transform_publisher" name="odom_base_tf" args="0.000 0.000 0.000 0.000 0.000 0.000 odom /odometry/laser_odometer 100"/-->

    <!-- Optimizing outside rtabmap node makes it able to optimize always the global map -->
    <node pkg="rtabmap_ros" type="map_optimizer" name="map_optimizer" />
    <!--
    map_frame_id
    odom_frame_id
    iterations 100
    ignore_variance false
    global_optimization true
    optimize_from_last_node false
    publish_tf true
    tf_delay 0.05
    -->

    <node pkg="rtabmap_ros" type="map_assembler" name="map_assembler">
      <param name="occupancy_grid" type="bool" value="true"/>

      <remap from="mapData" to="mapData_optimized"/>
      <remap from="grid_projection_map" to="/map"/>
      <!--remap from="optimize_from_last_node" to="true"/-->
      <!--
      cloud_decimation
      cloud_max_depth
      cloud_voxel_size
      scan_voxel_size
      filter_radius
      filter_angle
      noise_filter_radius
      noise_filter_min_neighbors
      occupancy_grid
      occupancy_cell_size
      occupancy_ground_max_angle
      occupancy_cluster_min_size
      occupancy_empty_filling_radius
      occupancy_max_height
      occupancy_map_size
      -->
    </node>

    <!-- Visualisation RTAB-Map -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_stereo"    type="bool" value="$(arg use_camera_stereo)" />
      <param name="subscribe_depth"     type="bool" value="$(arg use_camera_depth)" />
      <param name="subscribe_odom_info" type="bool" value="true" />
      <param name="frame_id" type="string" value="base_link"/>
      <param name="queue_size" type="int" value="10"/>

      <!-- Stereo camera -->
      <remap from="left/image_rect"   to="/camera_stereo/left/image_rect_color"  if="$(arg use_camera_stereo)" />
      <remap from="right/image_rect"  to="/camera_stereo/right/image_rect_color" if="$(arg use_camera_stereo)" />
      <remap from="left/camera_info"  to="/camera_stereo/left/camera_info"       if="$(arg use_camera_stereo)" />
      <remap from="right/camera_info" to="/camera_stereo/right/camera_info"      if="$(arg use_camera_stereo)" />
      <remap from="rgb/image"         to="/camera_stereo/left/image_rect_color"  if="$(arg use_camera_stereo)" />
      <remap from="rgb/camera_info"   to="/camera_stereo/left/camera_info"       if="$(arg use_camera_stereo)" />

      <!-- Depth camera -->
      <remap from="depth/image"     to="/camera_depth/depth_registered/image_raw"  if="$(arg use_camera_depth)" />
      <remap from="rgb/image"       to="/camera_depth/rgb/image_raw"    if="$(arg use_camera_depth)" /><!-- TODO: `image_rect_color` -->
      <remap from="rgb/camera_info" to="/camera_depth/rgb/camera_info"  if="$(arg use_camera_depth)" />

      <remap from="odom_info" to="/odom_info" />
      <remap from="odom" to="$(arg topic_odom)"/>
      <remap from="mapData" to="mapData_optimized" />
    </node>

  </group>

  <!-- Visualisation RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find kulbu_slam)/config/nav.rviz" />

</launch>
